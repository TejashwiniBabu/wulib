// @include lukaszLibrary.jsx;/*var one = 1;var two = "2";//print(typeof two);if (typeof one == "number") {    print("its a number!!\n ===== \n");    }else if (typeof one =="string"){    print("its a string yooo"+"\n=====\n");    }//var mySymbolz = app.activeDocument.SymbolItems.getByName("me");//print(mySymbolz.controlBounds);var idoc = app.activeDocument;var parent = idoc.pathItems[0];var parentVB = parent.visibleBounds;    var left = parentVB[0];    var top = -parentVB[1];    var right = parentVB[2];    var bottom = -parentVB[3];    for (i = 1 ; i<idoc.pageItems.length; i++){                print("parent is : "+parent.name);        print("child is : "+child.name);        var child = idoc.pageItems[i];        //print(" for: "+child.name+" it is "+pointIsIn(left, top, bottom, right, child)+"\n *******");        if (pointIsIn(left, top, bottom, right, child)){            //print("FOR: "+child.name+" IT IS TRUE");        }     print("=========next child ==========");        }    //topPath.remove();         function pointIsIn(parentLeft, parentTop, parentBottom, parentRight, child) {        var isTrue;        var myChild = child;        var childVB = myChild.visibleBounds;        childLeft = childVB[0];        childTop = -childVB[1];        childRight = childVB[2];        childBottom = -childVB[3];        print("parent bounds: "+left+" "+top+" "+right+" "+bottom);        print("child bounds: "+childLeft+" "+childTop+" "+childRight+" "+childBottom);        if ( childLeft > parentLeft && childTop > parentTop && childRight < parentRight && childBottom > parentBottom) {            print("pass");            var isTrue = true;            return true;        } else {            print("fail");            var isTrue = false;            return false;        }     } print("========================== \n========================== ");  *///print(app.activeDocument.symbols[0].name)//for(var i = 0; app.activeDocument.symbolItems//var currentSymbol = new MySymbol([i]);//printObj(doc.layers.getByName("parent").pathItems);//var div1 = doc.pageItems.getByName(div1);//var div1 = div1.index;//printObj(div1.layer);//var currentLibrary = new symbolLibrary();//print(currentLibrary.all);//print(doc.symbols.length)var currentSymbol = new MySymbol(0);print(currentSymbol.controlBounds);